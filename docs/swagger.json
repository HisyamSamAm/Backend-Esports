{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the ESports Management platform.",
        "title": "ESports Management API",
        "contact": {
            "name": "API Support",
            "email": "support@embeck.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:1010",
    "basePath": "/",
    "paths": {
        "/api/admin/matches": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mendapatkan daftar semua pertandingan, bisa difilter berdasarkan tournament_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matches"
                ],
                "summary": "Get All Matches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter pertandingan berdasarkan ID turnamen",
                        "name": "tournament_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MatchWithDetails"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Membuat pertandingan baru untuk turnamen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matches"
                ],
                "summary": "Create New Match",
                "parameters": [
                    {
                        "description": "Match data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MatchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.MatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/matches/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mendapatkan detail pertandingan berdasarkan ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matches"
                ],
                "summary": "Get Match By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Match"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui detail pertandingan termasuk input skor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matches"
                ],
                "summary": "Update Match",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Match data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus pertandingan dari database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matches"
                ],
                "summary": "Delete Match",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MatchResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/players": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mendapatkan daftar semua pemain Mobile Legends",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Players"
                ],
                "summary": "Get All Players",
                "responses": {
                    "200": {
                        "description": "Daftar semua pemain",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Player"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menambahkan pemain baru ke database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Players"
                ],
                "summary": "Create New Player",
                "parameters": [
                    {
                        "description": "Player data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PlayerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Player berhasil dibuat",
                        "schema": {
                            "$ref": "#/definitions/model.PlayerResponse"
                        }
                    },
                    "400": {
                        "description": "Request data tidak valid",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Player sudah ada",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/players/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mendapatkan detail pemain berdasarkan ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Players"
                ],
                "summary": "Get Player By ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"64f123abc456def789012345\"",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail pemain",
                        "schema": {
                            "$ref": "#/definitions/model.Player"
                        }
                    },
                    "400": {
                        "description": "ID tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Player tidak ditemukan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui detail pemain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Players"
                ],
                "summary": "Update Player",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"64f123abc456def789012345\"",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Player data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PlayerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player berhasil diupdate",
                        "schema": {
                            "$ref": "#/definitions/model.PlayerResponse"
                        }
                    },
                    "400": {
                        "description": "Request data tidak valid",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Player tidak ditemukan",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus pemain dari database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Players"
                ],
                "summary": "Delete Player",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"64f123abc456def789012345\"",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player berhasil dihapus",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Player tidak ditemukan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/admin/teams": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mendapatkan daftar semua tim dengan detail kapten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Get All Teams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TeamWithDetails"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Membuat tim baru dengan kapten dan anggota",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Create New Team",
                "parameters": [
                    {
                        "description": "Team data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TeamRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.TeamResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/teams/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mendapatkan detail tim berdasarkan ID dengan detail kapten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Get Team By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TeamWithDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui detail tim",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Update Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Team data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TeamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TeamResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus tim dari database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Delete Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TeamResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/admin/tournaments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all tournaments with admin details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament Management (Admin)"
                ],
                "summary": "Get all tournaments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TournamentWithDetails"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new tournament (admin access required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament Management (Admin)"
                ],
                "summary": "Create new tournament",
                "parameters": [
                    {
                        "description": "Tournament data",
                        "name": "tournament",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TournamentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.TournamentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/tournaments/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get tournament details by ID (admin access)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament Management (Admin)"
                ],
                "summary": "Get tournament by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tournament"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update tournament details including participating teams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament Management (Admin)"
                ],
                "summary": "Update tournament",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tournament data",
                        "name": "tournament",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TournamentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TournamentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete tournament by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament Management (Admin)"
                ],
                "summary": "Delete tournament",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TournamentResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/upload/player-avatar": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload player avatar image (PNG, JPG, JPEG)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Upload player avatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Player avatar image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/upload/team-logo": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload team logo image (PNG, JPG, JPEG)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Upload team logo",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Team logo image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mendapatkan daftar semua user (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Management"
                ],
                "summary": "Get All Users",
                "responses": {
                    "200": {
                        "description": "Daftar semua user berhasil diambil",
                        "schema": {
                            "$ref": "#/definitions/model.UsersListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Token tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Hanya admin yang dapat mengakses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/admin/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mendapatkan detail user berdasarkan ID (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Management"
                ],
                "summary": "Get User by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"64f123abc456def789012345\"",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User detail berhasil diambil",
                        "schema": {
                            "$ref": "#/definitions/model.UserProfile"
                        }
                    },
                    "400": {
                        "description": "ID tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Token tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Hanya admin yang dapat mengakses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User tidak ditemukan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengupdate data user (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Management"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"64f123abc456def789012345\"",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data user yang akan diupdate",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User berhasil diupdate",
                        "schema": {
                            "$ref": "#/definitions/model.UserProfile"
                        }
                    },
                    "400": {
                        "description": "Request data tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Token tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Hanya admin yang dapat mengakses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User tidak ditemukan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Username atau email sudah digunakan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus user dari sistem (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Management"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"64f123abc456def789012345\"",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User berhasil dihapus",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Token tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Hanya admin yang dapat mengakses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User tidak ditemukan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login user dan mendapatkan PASETO token untuk autentikasi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Data login user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login berhasil dengan token",
                        "schema": {
                            "$ref": "#/definitions/model.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Request data tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Kredensial tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/auth/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mendapatkan profil user yang sedang login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get User Profile",
                "responses": {
                    "200": {
                        "description": "Profil user",
                        "schema": {
                            "$ref": "#/definitions/model.UserProfile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User tidak ditemukan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Mendaftarkan user baru ke dalam sistem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register New User",
                "parameters": [
                    {
                        "description": "Data registrasi user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User berhasil didaftarkan",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Request data tidak valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Email atau username sudah digunakan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/me/tickets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all tickets purchased by the currently authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Get My Tickets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.UserTicketResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/tickets/purchase": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows an authenticated user to purchase a ticket for a specific match.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Purchase a ticket",
                "parameters": [
                    {
                        "description": "Purchase Ticket Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserTicketRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.UserTicket"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Match not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Ticket already purchased",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/tournaments": {
            "get": {
                "description": "Get all tournaments without admin details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament Data (Public)"
                ],
                "summary": "Get all tournaments (public)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TournamentPublic"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/tournaments/{id}": {
            "get": {
                "description": "Get tournament with populated teams and matches",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament Data (Public)"
                ],
                "summary": "Get tournament details (public)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TournamentWithDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AuthResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user.example@example.com"
                },
                "message": {
                    "type": "string",
                    "example": "Login successful"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "token": {
                    "type": "string",
                    "example": "v2.local.xxx"
                },
                "user_id": {
                    "type": "string",
                    "example": "64f123abc456def789012345"
                },
                "username": {
                    "type": "string",
                    "example": "userbaru123"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user.example@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "passwordAman123"
                }
            }
        },
        "model.Match": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "match_date": {
                    "type": "string"
                },
                "match_time": {
                    "type": "string"
                },
                "result_team_a_score": {
                    "type": "integer"
                },
                "result_team_b_score": {
                    "type": "integer"
                },
                "round": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "team_a_id": {
                    "type": "string"
                },
                "team_b_id": {
                    "type": "string"
                },
                "tournament_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "winner_team_id": {
                    "type": "string"
                }
            }
        },
        "model.MatchBasicInfo": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "match_date": {
                    "type": "string"
                },
                "match_time": {
                    "type": "string"
                },
                "result_team_a_score": {
                    "type": "integer"
                },
                "result_team_b_score": {
                    "type": "integer"
                },
                "round": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "team_a": {
                    "$ref": "#/definitions/model.TeamBasicInfo"
                },
                "team_b": {
                    "$ref": "#/definitions/model.TeamBasicInfo"
                },
                "winner_team_id": {
                    "type": "string"
                }
            }
        },
        "model.MatchRequest": {
            "type": "object",
            "required": [
                "match_date",
                "match_time",
                "round",
                "status",
                "team_a_id",
                "team_b_id",
                "tournament_id"
            ],
            "properties": {
                "location": {
                    "type": "string",
                    "example": "Stadium XYZ"
                },
                "match_date": {
                    "type": "string"
                },
                "match_time": {
                    "type": "string",
                    "example": "20:00"
                },
                "result_team_a_score": {
                    "type": "integer",
                    "example": 2
                },
                "result_team_b_score": {
                    "type": "integer",
                    "example": 3
                },
                "round": {
                    "type": "string",
                    "example": "Grand Final"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "scheduled",
                        "ongoing",
                        "completed",
                        "cancelled"
                    ],
                    "example": "completed"
                },
                "team_a_id": {
                    "type": "string",
                    "example": "687f9d7c8efa8f58af86646a"
                },
                "team_b_id": {
                    "type": "string",
                    "example": "687f9d7c8efa8f58af86646b"
                },
                "tournament_id": {
                    "type": "string",
                    "example": "687e5cd44643a58edf8210e8"
                },
                "winner_team_id": {
                    "type": "string",
                    "example": "687f9d7c8efa8f58af86646b"
                }
            }
        },
        "model.MatchResponse": {
            "type": "object",
            "properties": {
                "match_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.MatchWithDetails": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "match_date": {
                    "type": "string"
                },
                "match_time": {
                    "type": "string"
                },
                "result_team_a_score": {
                    "type": "integer"
                },
                "result_team_b_score": {
                    "type": "integer"
                },
                "round": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "team_a": {
                    "$ref": "#/definitions/model.TeamBasicInfo"
                },
                "team_a_id": {
                    "type": "string"
                },
                "team_b": {
                    "$ref": "#/definitions/model.TeamBasicInfo"
                },
                "team_b_id": {
                    "type": "string"
                },
                "tournament_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "winner_team_id": {
                    "type": "string"
                }
            }
        },
        "model.Player": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "avatar_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "ml_id": {
                    "type": "string"
                },
                "ml_nickname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.PlayerDetails": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "ml_id": {
                    "type": "string"
                },
                "ml_nickname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.PlayerRequest": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string",
                    "example": "https://example.com/avatar.png"
                },
                "ml_id": {
                    "type": "string",
                    "example": "123456789"
                },
                "ml_nickname": {
                    "type": "string",
                    "example": "johndoe123"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "model.PlayerResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "player_id": {
                    "type": "string"
                }
            }
        },
        "model.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user.baru@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "passwordAman123"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "userbaru123"
                }
            }
        },
        "model.TeamBasicInfo": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "model.TeamRequest": {
            "type": "object",
            "properties": {
                "captain_id": {
                    "type": "string",
                    "example": "687f9d7c8efa8f58af86646a"
                },
                "logo_url": {
                    "type": "string",
                    "example": "https://example.com/rrq_logo.png"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "687f9d7c8efa8f58af86646a",
                        "687f9d7c8efa8f58af86646b"
                    ]
                },
                "team_name": {
                    "type": "string",
                    "example": "RRQ Hoshi"
                }
            }
        },
        "model.TeamResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "team_id": {
                    "type": "string"
                }
            }
        },
        "model.TeamWithDetails": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "captain_details": {
                    "$ref": "#/definitions/model.PlayerDetails"
                },
                "captain_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "members_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PlayerDetails"
                    }
                },
                "team_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Tournament": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prize_pool": {
                    "type": "string"
                },
                "rules_document_url": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "teams_participating": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.TournamentPublic": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prize_pool": {
                    "type": "string"
                },
                "rules_document_url": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.TournamentRequest": {
            "type": "object",
            "required": [
                "description",
                "end_date",
                "name",
                "prize_pool",
                "start_date",
                "status"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prize_pool": {
                    "type": "string"
                },
                "rules_document_url": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "upcoming",
                        "ongoing",
                        "completed"
                    ]
                },
                "teams_participating": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.TournamentResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "tournament_id": {
                    "type": "string"
                }
            }
        },
        "model.TournamentWithDetails": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MatchBasicInfo"
                    }
                },
                "name": {
                    "type": "string"
                },
                "prize_pool": {
                    "type": "string"
                },
                "rules_document_url": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "teams_participating": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TeamBasicInfo"
                    }
                }
            }
        },
        "model.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email.update@example.com"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "example": "admin"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "usernameUpdate"
                }
            }
        },
        "model.UploadResponse": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string"
                },
                "file_url": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.UserProfile": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "64f123abc456def789012345"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-07-16T07:28:37.016Z"
                },
                "email": {
                    "type": "string",
                    "example": "user.example@example.com"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-07-16T07:28:37.016Z"
                },
                "username": {
                    "type": "string",
                    "example": "userbaru123"
                }
            }
        },
        "model.UserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User registered successfully"
                },
                "user_id": {
                    "type": "string",
                    "example": "64f123abc456def789012345"
                }
            }
        },
        "model.UserTicket": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "match_id": {
                    "type": "string"
                },
                "purchase_date": {
                    "type": "string"
                },
                "status": {
                    "description": "e.g., \"valid\", \"used\"",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.UserTicketRequest": {
            "type": "object",
            "required": [
                "match_id"
            ],
            "properties": {
                "match_id": {
                    "type": "string"
                }
            }
        },
        "model.UserTicketResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "match_details": {
                    "$ref": "#/definitions/model.MatchBasicInfo"
                },
                "match_id": {
                    "type": "string"
                },
                "purchase_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.UsersListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserProfile"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Users retrieved successfully"
                },
                "total": {
                    "type": "integer",
                    "example": 5
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and a PASETO token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}